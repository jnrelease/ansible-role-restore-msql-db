DECLARE @backupLocation NVARCHAR(512); -- specify the location of backup files
SET @backupLocation = {{ res_path }}; -- change this to the actual path

-- Create a cursor to iterate through the backup files
DECLARE restore_cursor CURSOR READ_ONLY FOR  
SELECT name, physical_name
FROM msdb.dbo.backupset AS b
INNER JOIN msdb.dbo.backupmediafamily AS m ON b.media_set_id = m.media_set_id
INNER JOIN master.sys.master_files AS f ON b.database_name = f.database_name
WHERE backup_start_date >= DATEADD(DAY, -1, GETDATE()) -- Adjust this condition based on your backup retention policy
AND m.physical_device_name LIKE @backupLocation + '%.bak'
ORDER BY backup_start_date DESC;

-- Declare variables for database name and file path
DECLARE @name NVARCHAR(256);
DECLARE @fileName NVARCHAR(512);

-- Open the cursor
OPEN restore_cursor;

-- Fetch the first record from the cursor
FETCH NEXT FROM restore_cursor INTO @name, @fileName;

-- Loop through the cursor
WHILE @@FETCH_STATUS = 0
BEGIN
    -- Build the full file path for the backup file
    SET @fileName = @backupLocation + @name + '.BAK';

    -- Restore the database from the backup file
    RESTORE DATABASE @name FROM DISK = @fileName WITH REPLACE;

    -- Fetch the next record from the cursor
    FETCH NEXT FROM restore_cursor INTO @name, @fileName;
END

-- Close and deallocate the cursor
CLOSE restore_cursor;
DEALLOCATE restore_cursor;
